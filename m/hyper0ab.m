function hyper0ab

[alpha,beta] = meshgrid(0:0.1:pi/2, 0:0.1:pi/2);


alpha = alpha(:);
beta = beta(:);

nrm2 = @(x)x.*conj(x);
nrm = @(x)sqrt(nrm2(x));


ca = cos(alpha);
cb = cos(beta);
sa = sin(alpha);
sb = sin(beta);

ca2 = power(ca,2);
ca3 = power(ca,3);
ca4 = power(ca,4);

sa2 = power(sa,2);
sb2 = power(sb,2);

cb2 = power(cb,2);
cb3 = power(cb,3);
cb4 = power(cb,4);
cb5 = power(cb,5);


A = cos(alpha) + i .* sin(alpha);
B = -cos(beta) + i .* sin(beta);

AA =  real(B) + i .* nrm(A - real(B));
BB =  real(A) + i .* nrm(B - real(A));
CC = i;




dAABB = [acosh(1 + nrm2(AA - BB)./ (2 .* imag(AA).*imag(BB))) ...
         acosh(1 + ((ca + cb) .* (ca + cb) + power((nrm(A - real(B)) -nrm(B - real(A))), 2)  )./ (2 .* imag(AA).*imag(BB))) ...
         ...
         acosh(1 + ((ca + cb) .* (ca + cb) + nrm2(A-real(B)) + nrm2(B-real(A)) - 2.*(nrm(A - real(B)).*nrm(B - real(A)))  )./ (2 .* imag(AA).*imag(BB))) ...
         ...
         acosh(1 + ((ca + cb) .* (ca + cb) + (ca2 + cb2 + 2.*ca.*cb + sa2) + (ca2 + cb2 + 2.*ca.*cb + sb2) - 2.*(nrm(A - real(B)).*nrm(B - real(A)))  )./ (2 .* imag(AA).*imag(BB))) ...
         ...
         acosh(1 + ((ca + cb) .* (ca + cb) + (ca2 + cb2 + 2.*ca.*cb + sa2) + (ca2 + cb2 + 2.*ca.*cb + sb2) - 2.*(nrm(A - real(B)).*nrm(B - real(A)))  )./ (2 .* imag(AA).*imag(BB))) ...
         ...
         acosh(1 + (ca2 + cb2 +2.*ca.*cb + ca2 + cb2 + 2.*ca.*cb + sa2 + ca2 + cb2 + 2.*ca.*cb + sb2 - 2.*(nrm(A - real(B)).*nrm(B - real(A)))  )./ (2 .* imag(AA).*imag(BB))) ...
         ...
         acosh(1 + (1 + 3.*ca.*cb + ca2 + cb2  - (nrm(A - real(B)).*nrm(B - real(A)))  )./ (imag(AA).*imag(BB))) ...
         ...
         acosh(1 + (1 + 3.*ca.*cb + ca2 + cb2  - (nrm(A - real(B)).*nrm(B - real(A)))  )./ ( nrm(A - real(B)).*nrm(B - real(A)))) ...
         ...
         acosh((1 + 3.*ca.*cb + ca2 + cb2  )./ ( nrm(A - real(B)).*nrm(B - real(A)))) ...
         ...
         acosh((1 + 3.*ca.*cb + ca2 + cb2  )./ sqrt(nrm2(A - real(B)).*nrm2(B - real(A)))) ...
         ...
         acosh((1 + 3.*ca.*cb + ca2 + cb2  )./ sqrt(((ca+cb).*(ca+cb) + sa2).*((ca+cb).*(ca+cb) + sb2))) ...
         ...
         acosh((1 + 3.*ca.*cb + ca2 + cb2  )./ sqrt((1 + 2.*ca.*cb + cb2).*(1 + 2.*ca.*cb + ca2))) ...
         ...
         acosh((1 + 3.*ca.*cb + ca2 + cb2  )./ sqrt(1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3)) ...
];
     
dAABBda = (calcDistAABB(alpha+0.01,beta) - calcDistAABB(alpha,beta)) ./ 0.01;

sq = sqrt(1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3);


dsqda = -(2.*ca.*sa + 4.*sa.*cb + 10.* ca.*sa.*cb2 + 6 .* cb .* ca2.*sa + 2.*sa.*cb3);
sq2 = 1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3;
den = (1 + 3.*ca.*cb + ca2 + cb2  );

den2 =  1 + 11.*ca2.*cb2 + 6.*ca.*cb + ca4 + cb4 + 2.*ca2 + 2.*cb2 + 6.*ca3.*cb + 6.*ca.*cb3;

den2Msq2 = 6.*ca2.*cb2 + 2.*ca.*cb + ca4 + cb4 + ca2 + cb2 + 4.*ca3.*cb + 4.*ca.*cb3;

denTdsqda = -(1 + 3.*ca.*cb + ca2 + cb2  ).* (2.*ca.*sa + 4.*sa.*cb + 10.* ca.*sa.*cb2 + 6 .* cb .* ca2.*sa + 2.*sa.*cb3);
denTdsqda = - (2.*ca.*sa + 4.*sa.*cb + 10.* ca.*sa.*cb2 + 6 .* cb .* ca2.*sa + 2.*sa.*cb3) ...
    - 3 .* ca.*cb .* 2.*ca.*sa + - 3 .* ca.*cb .* 4.*sa.*cb + - 3 .* ca.*cb .* 10.* ca.*sa.*cb2 + - 3 .* ca.*cb .* 6 .* cb .* ca2.*sa + - 3 .* ca.*cb .* 2.*sa.*cb3 ...
    - (ca2 + cb2  ).* (2.*ca.*sa + 4.*sa.*cb + 10.* ca.*sa.*cb2 + 6 .* cb .* ca2.*sa + 2.*sa.*cb3);

denTdsqda = - (2.*ca.*sa + 4.*sa.*cb + 10.* ca.*sa.*cb2 + 6 .* cb .* ca2.*sa + 2.*sa.*cb3) ...
    - 3 .* ca.*cb .* 2.*ca.*sa + - 3 .* ca.*cb .* 4.*sa.*cb + - 3 .* ca.*cb .* 10.* ca.*sa.*cb2 + - 3 .* ca.*cb .* 6 .* cb .* ca2.*sa + - 3 .* ca.*cb .* 2.*sa.*cb3 ...
    - ca2 .* 2.*ca.*sa - ca2 .* 4.*sa.*cb - ca2 .* 10.* ca.*sa.*cb2 - ca2 .* 6 .* cb .* ca2.*sa - ca2 .* 2.*sa.*cb3...
    - cb2 .* 2.*ca.*sa - cb2 .* 4.*sa.*cb - cb2 .* 10.* ca.*sa.*cb2 - cb2 .* 6 .* cb .* ca2.*sa - cb2 .* 2.*sa.*cb3;

denTdsqda = -sa .* (...
    2.*ca + 4.*cb + 10.*ca.*cb2 + 6.*cb.*ca2 + 2.*cb3 + ...
    6.*ca2.*cb + 12.*ca.*cb2 + 30.*ca2.*cb3 + 18.*ca3.*cb2  + 6.*ca.*cb4  +...
    2.*ca3 + 4.*ca2.*cb + ca2 .* 10.*ca.*cb2 + 6.*ca4.*cb + 2.*ca2.*cb3 +...
    2.*cb2.*ca + 4.*cb2.*cb + cb2 .* 10.*ca.*cb2 + 6.*cb3.*ca2 + 2.*cb2.*cb3...
    );

denTdsqda = -sa .* (...
    2.*ca + ...
    4.*cb + ...
    10.*ca.*cb2 + ...
    6.*cb.*ca2 + ...
    2.*cb3 + ...
    6.*ca2.*cb + ...
    12.*ca.*cb2 + ...
    30.*ca2.*cb3 + ...
    18.*ca3.*cb2  + ...
    6.*ca.*cb4  +...
    2.*ca3 + ...
    4.*ca2.*cb +... 
    10.*cb2.*ca3 + ...
    6.*ca4.*cb + ...
    2.*ca2.*cb3 +...
    2.*cb2.*ca + ...
    4.*cb3 + ...
    10.*cb4.*ca + ...
    6.*cb3.*ca2 + ...
    2.*cb2.*cb3...
    );

denTdsqda = -sa .* (2.*ca + 2.*ca3 + 4.*cb + 6.*cb3 + 2.*cb5 + 24.*cb2.*ca + 16.*cb.*ca2 + 38.*cb3.*ca2 + 28.*cb2.*ca3  + 16.*cb4.*ca + 6.*cb.*ca4);

z = den ./ sq;

w = (-3.*sa.*cb - 2 .* ca .* sa).*sq2.*2 - denTdsqda;
w = -sa .* (3.*cb + 2 .* ca).* (1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) .* 2 - denTdsqda;
w = sa .* ((2.*ca + 2.*ca3 + 4.*cb + 6.*cb3 + 2.*cb5 + 24.*cb2.*ca + 16.*cb.*ca2 + 38.*cb3.*ca2 + 28.*cb2.*ca3  + ...
            16.*cb4.*ca + 6.*cb.*ca4) - (3.*cb + 2 .* ca).* (1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) .* 2);

w = sa .* ((2.*ca + 2.*ca3 + 4.*cb + 6.*cb3 + 2.*cb5 + 24.*cb2.*ca + 16.*cb.*ca2 + 38.*cb3.*ca2 + 28.*cb2.*ca3 + 16.*cb4.*ca + 6.*cb.*ca4)...
           -(3.*cb + 2 .* ca).* (1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) .* 2);

w = sa .* ((2.*ca + 2.*ca3 + 4.*cb + 6.*cb3 + 2.*cb5 + 24.*cb2.*ca + 16.*cb.*ca2 + 38.*cb3.*ca2 + 28.*cb2.*ca3 + 16.*cb4.*ca + 6.*cb.*ca4)...
           -6 .* cb .* (1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) + ...
           -4 .* ca .* (1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3));


       
       
w = sa .* (-2.*ca - 2.*ca3 - 2.*cb + 2.*cb5 - 4.*cb2.*ca - 6.*cb.*ca2 - 4.*cb2.*ca3 + 4.*cb4.*ca - 2.*cb.*ca4);
wh = sa .* (-ca - ca3 - cb + cb5 - 2.*cb2.*ca - 3.*cb.*ca2 - 2.*cb2.*ca3 + 2.*cb4.*ca - cb.*ca4);
den2Msq2 = 6.*ca2.*cb2 + 2.*ca.*cb + ca4 + cb4 + ca2 + cb2 + 4.*ca3.*cb + 4.*ca.*cb3;
sq2 = 1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3;

       
dAABBda = [dAABBda ...
    power(z.*z - 1, -0.5) ./ (sq.*sq) .* ((-3.*sa.*cb - 2 .* ca .* sa).*sq - den./(2.*sq).*dsqda)...
    power(den.*den./(sq.*sq) - 1, -0.5) ./ (sq.*sq) .* ((-3.*sa.*cb - 2 .* ca .* sa).*sq - den./(2.*sq).*dsqda)...
    ...
    power((den.*den -sq.*sq)./(sq.*sq), -0.5) ./ (sq.*sq) .* ((-3.*sa.*cb - 2 .* ca .* sa).*sq - den./(2.*sq).*dsqda)...
    sq ./ power((den.*den -sq.*sq), 0.5) ./ (sq.*sq) .* ((-3.*sa.*cb - 2 .* ca .* sa).*sq - den./(2.*sq).*dsqda)...
    ((-3.*sa.*cb - 2 .* ca .* sa) - den./(2.*sq.*sq).*dsqda) ./ power((den.*den -sq.*sq), 0.5)...
    (-3.*sa.*cb - 2 .* ca .* sa - den.*dsqda./sq2./2) ./ power(den.*den - sq2, 0.5)...
    (-3.*sa.*cb - 2 .* ca .* sa -denTdsqda./sq2./2) ./ power(den2Msq2, 0.5)...
    (wh ./ sq2) ./ power(den2Msq2, 0.5)...
    ...
    sa .* (-ca - ca3 - cb + cb5 - 2.*cb2.*ca - 3.*cb.*ca2 - 2.*cb2.*ca3 + 2.*cb4.*ca - cb.*ca4) ./ ...
...%-----------------------------------------------------------------------------------------------
   ((1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) .* sqrt(6.*ca2.*cb2 + 2.*ca.*cb + ca4 + cb4 + ca2 + cb2 + 4.*ca3.*cb + 4.*ca.*cb3))...
    ...
    sa .* (-ca - ca3 - cb + cb5 - 2.*cb2.*ca - 3.*cb.*ca2 - 2.*cb2.*ca3 + 2.*cb4.*ca - cb.*ca4) ./ ...
...%-----------------------------------------------------------------------------------------------
   ((1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) .* sqrt(6.*ca2.*cb2 + 2.*ca.*cb + ca4 + cb4 + ca2 + cb2 + 4.*ca3.*cb + 4.*ca.*cb3))...
];

cor(dAABBda)
mean(dAABBda,1)


A = cos(alpha) + i .* sin(alpha);
B = -cos(beta) + i .* sin(beta);

AA =  real(B) + i .* nrm(A - real(B));
BB =  real(A) + i .* nrm(B - real(A));

dAACC = [acosh(1 + nrm2(AA - i)./ (2 .* imag(AA))) ...
         acosh(1 + nrm2(  -cb + i .* (sqrt((ca + cb).*(ca+cb) + sa.*sa) - 1)  ) ./  (2 .* imag(AA))) ...
...
         acosh(1 + nrm2(  -cb + i .* (sqrt((ca + cb).*(ca+cb) + sa.*sa) - 1)  ) ./  (2 .*  sqrt(ca2+cb2+2.*ca.*cb + sa.*sa))) ...
         acosh(1 + nrm2(  -cb + i .* (sqrt(ca2+cb2+2.*ca.*cb + sa.*sa) - 1)  ) ./  (2 .*  sqrt(ca2+cb2+2.*ca.*cb + sa.*sa))) ...
         acosh(1 + (cb2 + 1 + ca2+cb2+2.*ca.*cb + sa.*sa - 2 .* sqrt(ca2+cb2+2.*ca.*cb + sa.*sa) ) ./  (2 .*  sqrt(ca2+cb2+2.*ca.*cb + sa.*sa))) ...
         acosh( (cb2 + 1 + ca2+cb2+2.*ca.*cb + sa.*sa) ./  (2 .*  sqrt(ca2+cb2+2.*ca.*cb + sa.*sa))) ...
...
         acosh((2.*cb2 + 2 + 2.*ca.*cb) ./  (2 .*  sqrt(1+cb2+2.*ca.*cb))) ...
         acosh((1 + cb2 + ca.*cb) ./  sqrt(1 + cb2 + 2.*ca.*cb)) ...
         ];

dBBCC =  acosh((1 + ca2 + ca.*cb) ./  sqrt(1 + ca2 + 2.*ca.*cb));

sqq = sqrt(1 + cb2 + 2.*ca.*cb) ;

dAACCda = (calcDistAACC(alpha+0.001,beta) - calcDistAACC(alpha,beta)) ./ 0.001;
dAACCda = [dAACCda ...
    power( power(1 + cb2 + ca.*cb, 2) ./ sqq./ sqq - 1, -0.5) .* -sa .* ( cb .* sqq - 1 ./ (2 .* sqq) .* (1 + cb2 + ca.*cb) .* 2 .* cb   ) ./ sqq ./ sqq...
    -sa .* power((power(1 + cb2 + ca.*cb, 2) - sqq.*sqq) ./ sqq ./ sqq, -0.5) .* ( cb .* sqq - 1 ./ (2 .* sqq) .* (1 + cb2 + ca.*cb) .* 2 .* cb   ) ./ sqq ./ sqq...
    -sa .* power((power(1 + cb2 + ca.*cb, 2) - sqq.*sqq), -0.5)  .* ( cb .* sqq - 1 ./ (2 .* sqq) .* (1 + cb2 + ca.*cb) .* 2 .* cb   ) ./ sqq ...
    -sa .* power((power(1 + cb2 + ca.*cb, 2) - sqq.*sqq), -0.5)  .* ( cb - 1 ./ (2 .* sqq .* sqq) .* (1 + cb2 + ca.*cb) .* 2 .* cb   ) ...
    -sa .* ( cb - 1 ./ (2 .* sqq .* sqq) .* (1 + cb2 + ca.*cb) .* 2 .* cb   ) ./ sqrt(power(1 + cb2 + ca.*cb, 2) - sqq.*sqq)...
    -sa .* ( cb - (1 + cb2 + ca.*cb) .* 2 .* cb ./ (2 .* sqq .* sqq)  ) ./ sqrt(power(1 + cb2 + ca.*cb, 2) - sqq.*sqq)...
    -sa .* cb .* (1 - (1 + cb2 + ca.*cb) ./ (sqq .* sqq)  ) ./ sqrt(power(1 + cb2 + ca.*cb, 2) - sqq.*sqq)...
    -sa .* cb .* (sqq .* sqq - (1 + cb2 + ca.*cb)   ) ./ sqrt(power(1 + cb2 + ca.*cb, 2) - sqq.*sqq)./ (sqq .* sqq)...
    -sa .* cb .* (1 + cb2 + 2.*ca.*cb - (1 + cb2 + ca.*cb)   ) ./ sqrt(power(1 + cb2 + ca.*cb, 2) - (1 + cb2 + 2.*ca.*cb)) ./ (1 + cb2 + 2.*ca.*cb)...
    -sa .* cb2 .* ca ./ sqrt(power(1 + cb2 + ca.*cb, 2) - (1 + cb2 + 2.*ca.*cb)) ./ (1 + cb2 + 2.*ca.*cb)...
    -sa .* cb2 .* ca ./ sqrt( 1 + cb4 + ca2 .* cb2 + 2.*cb2  + 2.* ca.*cb  + 2 .* cb3 .* ca - 1-cb2-2.*ca.*cb     ) ./ (1 + cb2 + 2.*ca.*cb)...
    -sa .* cb  .* ca ./ sqrt(     cb2 + ca2 +    1                + 2 .* cb .* ca) ./ (1 + cb2 + 2.*ca.*cb)...
    ];

sqq = sqrt(1 + ca2 + 2.*ca.*cb) ;
den = (1 + ca2 + ca.*cb);

dBBCCda = (calcDistBBCC(alpha+0.001,beta) - calcDistBBCC(alpha,beta)) ./ 0.001;
dBBCCda = [dBBCCda ...
    power(den.*den ./sqq./sqq  - 1, -0.5) .* -sa .* ( (2.*ca + cb) .* sqq - 1 ./ (2 .* sqq) .* (1 + ca2 + ca.*cb) .* (2 .* ca  + 2 .* cb)  ) ./ sqq ./ sqq...
    -sa .* ( (2.*ca + cb) .* sqq - 1 ./ (2 .* sqq) .* (1 + ca2 + ca.*cb) .* (2 .* ca  + 2 .* cb)  ) ./ (sqq .* sqq .* sqrt(den.*den ./sqq./sqq  - 1  ))...
    -sa .* ( (2.*ca + cb) .* sqq - 1 ./ (2 .* sqq) .* (1 + ca2 + ca.*cb) .* (2 .* ca  + 2 .* cb)  ) ./ (       sqq .* sqrt(den.*den - sqq.*sqq))...
    -sa .* ( (2.*ca + cb) - 1 ./ (2 .* sqq .* sqq) .* (1 + ca2 + ca.*cb) .* (2 .* ca  + 2 .* cb)  ) ./ sqrt(den.*den - sqq.*sqq)...
    -sa .* ( (2.*ca + cb) -  (1 + ca2 + ca.*cb) .* (ca  + cb) ./ (sqq .* sqq)  ) ./ sqrt(den.*den - sqq.*sqq)...
    -sa .* ((2.*ca + cb).* (sqq .* sqq) -  (1 + ca2 + ca.*cb) .* (ca  + cb)) ./ (sqq .* sqq) ./ sqrt(den.*den - sqq.*sqq)...
    -sa .* ((2.*ca + cb).* (1 + ca2 + 2.*ca.*cb) -  (1 + ca2 + ca.*cb) .* (ca  + cb)) ./ (1 + ca2 + 2.*ca.*cb) ./ sqrt(den.*den - (1 + ca2 + 2.*ca.*cb))...
    -sa .* ca .* (1 + ca2 + 3.*ca.*cb  + cb2) ./ (1 + ca2 + 2.*ca.*cb) ./ sqrt((1 + ca2 + ca.*cb).*(1 + ca2 + ca.*cb) - (1 + ca2 + 2.*ca.*cb))...
    -sa .* ca .* (1 + ca2 + 3.*ca.*cb  + cb2) ./ (1 + ca2 + 2.*ca.*cb) ./ sqrt(1 + (ca2 + ca.*cb).*(ca2 + ca.*cb) + 2 .* (ca2 + ca.*cb) - (1 + ca2 + 2.*ca.*cb))...
    -sa .* ca .* (1 + ca2 + 3.*ca.*cb  + cb2) ./ (1 + ca2 + 2.*ca.*cb) ./ sqrt(ca4 + ca2.*cb2 + 2.*ca3.*cb + ca2)...
    -sa .* (1 + ca2 + 3.*ca.*cb  + cb2) ./ (1 + ca2 + 2.*ca.*cb) ./ sqrt(ca2 + cb2 + 2.*ca.*cb + 1)...
    ];


cor(dBBCCda)
mean(dBBCCda, 1)

dall = sa .* (-ca - ca3 - cb + cb5 - 2.*cb2.*ca - 3.*cb.*ca2 - 2.*cb2.*ca3 + 2.*cb4.*ca - cb.*ca4) ./ ...
    ((1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3) .* sqrt(6.*ca2.*cb2 + 2.*ca.*cb + ca4 + cb4 + ca2 + cb2 + 4.*ca3.*cb + 4.*ca.*cb3)) + ...
    -sa .* cb .* ca                     ./ (1 + cb2 + 2.*ca.*cb) ./ sqrt(cb2 + ca2 + 2 .* cb .* ca + 1) + ...
    -sa .* (1 + ca2 + 3.*ca.*cb  + cb2) ./ (1 + ca2 + 2.*ca.*cb) ./ sqrt(ca2 + cb2 + 2 .* ca .* cb + 1);


all = acosh(1 + nrm2(AA - BB)./ (2 .* imag(AA).*imag(BB))) + ...
      acosh(1 + nrm2(BB - CC)./ (2 .* imag(BB).*imag(CC))) + ...
      acosh(1 + nrm2(CC - AA)./ (2 .* imag(CC).*imag(AA)));

plot3(alpha, beta, all, 'g')
figure;
plot3(alpha, beta, dall, 'b')

%all = reshape(all, [sqrt(numel(all)),sqrt(numel(all))])
%image(all ./ max(max(all)) * 64)


end




function dst = calcDistAABB(a,b)
ca = cos(a);
cb = cos(b);
sa = sin(a);
sb = sin(b);

ca2 = power(ca,2);
ca3 = power(ca,3);

cb2 = power(cb,2);
cb3 = power(cb,3);

dst = acosh((1 + 3.*ca.*cb + ca2 + cb2  )./ sqrt(1 + ca2 + cb2 + 4.*ca.*cb + 5.* ca2.*cb2 + 2 .* cb .*ca3 + 2.*ca.*cb3));
end

function dst = calcDistAACC(a,b)
ca = cos(a);
cb = cos(b);
sa = sin(a);
sb = sin(b);

ca2 = power(ca,2);
ca3 = power(ca,3);

cb2 = power(cb,2);
cb3 = power(cb,3);
dst = acosh((1 + cb2 + ca.*cb) ./  sqrt(1 + cb2 + 2.*ca.*cb));
end

function dst = calcDistBBCC(a,b)
A = cos(a) + i .* sin(a);
B = -cos(b) + i .* sin(b);
nrm2 = @(x)x.*conj(x);
nrm = @(x)sqrt(nrm2(x));

AA =  real(B) + i .* nrm(A - real(B));
BB =  real(A) + i .* nrm(B - real(A));
CC = i;
dst = acosh(1 + nrm2(BB - CC)./ (2 .* imag(BB).*imag(CC)));
end

function res = fangano_circumference(a,b)
A = cos(a) + i .* sin(a);
B = -cos(b) + i .* sin(b);
nrm2 = @(x)x.*conj(x);
nrm = @(x)sqrt(nrm2(x));

AA =  real(B) + i .* nrm(A - real(B));
BB =  real(A) + i .* nrm(B - real(A));
CC = i;
res =  acosh(1 + nrm2(BB - CC)./ (2 .* imag(BB).*imag(CC)));

end